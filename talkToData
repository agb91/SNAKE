<?php
class talkToData {
	private static $nomeHost   = "localhost";
   	private static $nomeUtente = "root";        // per progetti non didattici, mai
   	private static $password   = "";            // accedere come root senza password
   	private static $nomeDb     = "SNAKE";       //NOME DEL DB
	 
        
        public static function connetti() //PROCEDURA STANDARD DI CONNESSIONE A DATABASE
        {
            $connessione = @mysql_connect(self::$nomeHost, self::$nomeUtente, self::$password);
            // la @ all'inizio della funzione nasconde eventuali warning all'utente
            if (!$connessione)
            throw new Exception("Impossibile connettersi all'archivio: "); 
            $database = mysql_select_db(self::$nomeDb);
            if (!$database)
            throw new Exception("Impossibile connettersi alla classifica: ");
            return $connessione;
        }

        
        public static function ostacolo($liv)
        {
        	talkToData::connetti();
        	$tabella = "LABIRINTI".$liv;
        	$query1= sprintf("SELECT * FROM ".$tabella);
        	$risultato = mysql_query($query1);
        	$ri = "";
        	while ($riga = mysql_fetch_array($risultato))
        	{
        		$ri = $ri."".$riga["XINIZIO"]." ". $riga["YINIZIO"]." ".$riga["DIREZIONE"]." ".$riga["LUNGHEZZA"]."-";
        	}
        	@mysql_close($connessione);
        	return $ri;
        }
        
        
        public static function verificaUtente($nome, $pw)
        {
         //CONNESSIONE E GESTINE ERRORI DI CONNESSIONE:
        	$connessione = talkToData::connetti();

  			//query1 preventiva per capire se il nome è nuovo oppure c'è già  
            $risultatoHTML = "";
            $query1= sprintf("SELECT * FROM CREDENZIALI WHERE NOME=%s",talkToData::filtraCodiceSQL($nome));  
            $risultato = mysql_query($query1);
			while ($riga = mysql_fetch_array($risultato)) 
			{
           		$risultatoHTML = $risultatoHTML . $riga["NOME"] .  "\n";
                $nomeQ = $riga["NOME"];
                $pwQ =  $riga["PASSWORD"];
        	}
			if($risultatoHTML!="") // SE NON é VUOTO, QUINDI ESISTE GIà
        	{
        		if (($nome==$nomeQ) && ($pw==$pwQ))
        		{
        			@mysql_close($connessione); // SEMPRE CHIUDERE
        			return true;
        		}
        		else 
        		{
        			@mysql_close($connessione); // SEMPRE CHIUDERE
        			return false;
        		}
        	}
        	else // SE INVECE � VUOTO QUINDI � NUOVO
        	{
        		@mysql_close($connessione); // SEMPRE CHIUDERE
        		return false;
        	}
            
        }
        
        
        public static function inserisciUtente($nome, $pw)
        {
        	$connessione = talkToData::connetti();
        	 
        	//query1 preventiva per capire se il nome � nuovo oppure c'� gi�
        	$risultatoHTML = "";
        	$query= sprintf("SELECT NOME FROM CREDENZIALI WHERE NOME=%s",talkToData::filtraCodiceSQL($nome));
        	$risultato = mysql_query($query);
        	while ($riga = mysql_fetch_array($risultato)) {
        		$risultatoHTML = $risultatoHTML . $riga["NOME"] .  "\n";
        	} 
        	if($risultatoHTML!="") // SE NON � VUOTO, QUINDI ESISTE GI�
        	{
        		@mysql_close($connessione); // SEMPRE CHIUDERE
        		return false;
        	}
        	else // SE INVECE � VUOTO QUINDI � NUOVO
        	{ //FACCIO UN INSERIMENTO
        	$query= sprintf("INSERT INTO CREDENZIALI (NOME, PASSWORD) VALUES (%s, %s)", talkToData::filtraCodiceSQL($nome),
        			talkToData::filtraCodiceSQL($pw));
        	mysql_query($query);
        	}
        	@mysql_close($connessione); // SEMPRE CHIUDERE
        	return true;
        }
        
        
	public static function salvaRecord($nome, $punteggio) 
	{ 
		$connessione = talkToData::connetti();
		$query = sprintf("SELECT * FROM CLASSIFICA WHERE NOME=%s LIMIT 5", talkToData::filtraCodiceSQL($nome));
		$risultato = mysql_query($query);
		$i=0;
		while ($riga = mysql_fetch_array($risultato))
		{
			$i++;
		}
		if ($i<5) //se l'utente ha meno di 5 record
		{
			$query= sprintf("INSERT INTO CLASSIFICA (NOME, PUNTEGGIO) VALUES (%s, %s)", talkToData::filtraCodiceSQL($nome), $punteggio); 			
        	mysql_query($query);
		}
		else //modifico quello più basso se il nuovo punteggio è maggiore
		{
			$query = sprintf("SELECT * FROM CLASSIFICA WHERE NOME=%s ORDER BY PUNTEGGIO ASC LIMIT 1", talkToData::filtraCodiceSQL($nome));
			$risultato = mysql_query($query);
			$riga = mysql_fetch_array($risultato);
			$ris=$riga["PUNTEGGIO"];
			if($punteggio>$ris) // FACCIO UN UPDATE
			{
				$query = sprintf("UPDATE CLASSIFICA SET PUNTEGGIO=%s WHERE NOME=%s ORDER BY PUNTEGGIO ASC LIMIT 1", $punteggio, talkToData::filtraCodiceSQL($nome));
				mysql_query($query);
			}
		}
		@mysql_close($connessione); // SEMPRE CHIUDERE
    }

    
    public static function leggiRecordGenerale()
    {
		$connessione = talkToData::connetti();
		$classif = array();
		$query = sprintf("SELECT * FROM CLASSIFICA ORDER BY PUNTEGGIO DESC LIMIT 10");
        $risultato = mysql_query($query);
        $i=0;
		while ($riga = mysql_fetch_array($risultato)) 
		{
			$classif[$i]=array($riga["NOME"], $riga["PUNTEGGIO"]);
			$i++;
		}
		@mysql_close($connessione); // SEMPRE CHIUDERE
		return $classif;
        }
        
         public static function leggiRecordPersonale($nome)
        {
        	$connessione = talkToData::connetti();
        	$classif = array();
        	$query = sprintf("SELECT * FROM CLASSIFICA WHERE NOME=%s ORDER BY PUNTEGGIO DESC", talkToData::filtraCodiceSQL($nome));
        	$risultato = mysql_query($query);
        	$i=0;
        	while ($riga = mysql_fetch_array($risultato))
        	{
        		$classif[$i]=$riga["PUNTEGGIO"];
        		$i++;
        	}
        	@mysql_close($connessione); // SEMPRE CHIUDERE
        	return $classif;
        }
        
				
	// ripulisce le stringhe da salvare all'interno della base dati //PRESO PARI PARI DA ES 4
	private static function filtraCodiceSQL($stringa) {
    	if (get_magic_quotes_gpc())
        	$stringa = stripslashes($stringa);  	   
			// toglie gli slash (\) altrimenti potrebbero essere aggiunti due volte
      	if (!is_numeric($stringa))
        	$stringa = "'" . mysql_real_escape_string($stringa) . "'";
			 // converte i caratteri speciali SQL in modo che le query siano sicure
     	return $stringa;
    }
    
}
?>
